name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    env:
      RELEASE_PATH: target/release
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Build
      if: matrix.os != 'windows-latest'
      run: |
        touch a
        export B=b
        echo "::set-env name=BB::$B"
        echo "BB:${{BB}}"
        echo mv a ${{BB}}
        echo "BB:${{env.BB}}"
        echo mv a ${{env.BB}}
        mv a ${{BB}}
        mv a ${{env.BB}}
        #cargo build --release --verbose
        export RELEASE_TMP=${{env.RELEASE_PATH}}/server_tan_${{matrix.os}}
        echo "release path: $RELEASE_TMP"
        echo "::set-env name=RELEASE_FILE::$RELEASE_TMP"
        #echo "::set-env name=RELEASE_FILE::${{env.RELEASE_PATH}}/server_tan_${{matrix.os}}"
        echo mv ${{env.RELEASE_PATH}}/server_tan ${{env.RELEASE_FILE}}
        mv ${{env.RELEASE_PATH}}/server_tan ${{env.RELEASE_FILE}}
    - name: Build-Windows
      if: matrix.os == 'windows-latest'
      shell: bash
      run: |
        touch a
        export B=b
        echo "::set-env name=BB::$B"
        echo "BB:${{BB}}"
        echo mv a ${{BB}}
        echo "BB:${{env.BB}}"
        echo mv a ${{env.BB}}
        mv a ${{BB}}
        mv a ${{env.BB}}
        #cargo build --release --verbose
        export RELEASE_TMP=${{env.RELEASE_PATH}}/server_tan_${{matrix.os}}.exe
        echo "release path: $RELEASE_TMP"
        echo "::set-env name=RELEASE_FILE::$RELEASE_TMP"
        #echo "::set-env name=RELEASE_FILE::${{env.RELEASE_PATH}}/server_tan_${{matrix.os}}.exe"
        echo mv ${{env.RELEASE_PATH}}/server_tan.exe ${{env.RELEASE_FILE}}
        mv ${{env.RELEASE_PATH}}/server_tan.exe ${{env.RELEASE_FILE}}
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          ${{env.RELEASE_FILE}}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
